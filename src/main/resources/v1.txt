package com.example.batch5;

import org.springframework.batch.core.Job;
import org.springframework.batch.core.JobParametersBuilder;
import org.springframework.batch.core.Step;
import org.springframework.batch.core.configuration.annotation.StepScope;
import org.springframework.batch.core.job.builder.JobBuilder;
import org.springframework.batch.core.launch.JobLauncher;
import org.springframework.batch.core.repository.JobRepository;
import org.springframework.batch.core.step.builder.StepBuilder;
import org.springframework.batch.core.step.tasklet.Tasklet;
import org.springframework.batch.repeat.RepeatStatus;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.ApplicationArguments;
import org.springframework.boot.ApplicationRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.transaction.PlatformTransactionManager;

import java.util.UUID;

@SpringBootApplication
public class Batch5Application {

    public static void main(String[] args) {
        SpringApplication.run(Batch5Application.class, args);}

    @Bean
    ApplicationRunner runner(JobLauncher jobLauncher, Job job) {
        return args -> {
            var jobParameters = new JobParametersBuilder()
                    .addString("uuid", UUID.randomUUID().toString())
                    .toJobParameters();
            var run = jobLauncher.run(job, jobParameters);
            var instancedId = run.getJobInstance().getInstanceId();
            System.out.println("instancedId" + instancedId);
        };
    }

    @Bean
    Job job(JobRepository jobRepository, Step step){
        System.out.println("test job");
        return new JobBuilder("job", jobRepository)
                .start(step)
                .build();
    }

    @Bean
    Step step1(JobRepository jobRepository, Tasklet tasklet, PlatformTransactionManager tx){
        System.out.println("test step");
        return new StepBuilder("step1", jobRepository)
                .tasklet(tasklet,tx)
                .build();
    }

    @Bean
    @StepScope
    Tasklet tasklet(@Value("#{jobParameters['uuid']}") String uuid){
        System.out.println("test tasklet the uuid is:" + uuid);
        return (contribution, context) ->{
            System.out.println("spring batch 5");
            return RepeatStatus.FINISHED;
        };
    }

}
